if (!INCLUDE["JSON"]) {
    INCLUDE=set(INCLUDE, "JSON", true)

// JSON       ->  Mmwci equivalient

// Number     ->  Number
// String     ->  String
// Boolean    ->  Boolean
// Array      ->  Array
// Object     ->  Hash
// Whitespace ->  Whitespace
// Null       ->  null


    function tjson(Data, JsonOutput) {
        return string(Data)
    }

    function tomarkup(data, mu_type="json") {
        if (!checkfunctype("tomarkup", "string", data, 1)) {exit(1)}
        if (!checkfunctype("tomarkup", "string", mu_type, 2)) {exit(1)}
        tempfile="/tmp/markup." + string(getpid())
        writefile(tempfile, data + "\n")
        switch(mu_type) {
            case "xml", "json" {
                cmd=sprintf("cat %s | yq --output-format %s", tempfile, mu_type)
            }
            default {
                return false
            }
        }
        result=trim(system(cmd))
        unlink(tempfile)
        return result
    }

    function tojson(JsonData) {
        if (!checkfunctype("tojson", "collection", JsonData, 1)) {exit(1)}
        return tomarkup(tjson(JsonData), "json")
    }

    function object.tojson() {
        return tojson(self)
    }

    function object.tjson() {
        return tjson(self)
    }
}
